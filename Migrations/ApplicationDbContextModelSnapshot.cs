// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prjmng;

namespace prjmng.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("prjmng.Models.Assignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Assignees");
                });

            modelBuilder.Entity("prjmng.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Name");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("prjmng.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("ProjectManagerId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("prjmng.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentTaskId");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("State");

                    b.Property<ushort>("SubtaskAmount");

                    b.Property<int?>("TaskAssigneeId");

                    b.Property<int?>("TaskProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ParentTaskId");

                    b.HasIndex("TaskAssigneeId");

                    b.HasIndex("TaskProjectId");

                    b.ToTable("ProjectTasks");
                });

            modelBuilder.Entity("prjmng.Models.Project", b =>
                {
                    b.HasOne("prjmng.Models.Manager", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId");
                });

            modelBuilder.Entity("prjmng.Models.ProjectTask", b =>
                {
                    b.HasOne("prjmng.Models.ProjectTask", "ParentTask")
                        .WithMany()
                        .HasForeignKey("ParentTaskId");

                    b.HasOne("prjmng.Models.Assignee", "TaskAssignee")
                        .WithMany()
                        .HasForeignKey("TaskAssigneeId");

                    b.HasOne("prjmng.Models.Project", "TaskProject")
                        .WithMany()
                        .HasForeignKey("TaskProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
